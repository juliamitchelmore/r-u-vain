/*General*/
@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 5
	-moz-box-sizing: $box-model; // Firefox <= 19
	box-sizing: $box-model;
}

/*Animations*/
@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

/*Transformations*/
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}


/** RESPONSIVE
============== */

@mixin breakpoint($point) {
	@if $point == desktop {
		@media (min-width: 768px) { @content; }
	}
	@else if $point == phone {
		@media (max-width: 767px)  { @content; }
	}
	@else if $point == small-display {
		@media (max-width: 1280px) { @content; }
	}
	@else if $point == large-display {
		@media (min-width: 1280px) and (min-height: 935px) { @content; }
	}
	@else if $point == tablet {
		@media (min-width: 768px) and (max-width: 1024px)  { @content; }
	}
	@else if $point == large-phone {
		@media (min-width: 550px) and (max-width: 767px)  { @content; }
	}
	@else if $point == med-phone {
		@media (min-width: 400px) and (max-width: 549px)  { @content; }
	}
	@else if $point == med-or-smaller-phone {
		@media (max-width: 549px)  { @content; }
	}
	@else if $point == small-phone {
		@media (max-width: 399px)  { @content; }
	}
	@else if $point == tablet-or-smaller {
		@media (max-width: 940px) { @content; }	
	}
	@else if $point == shallow-height {
		@media (max-height: 800px) { @content; }
	}
	@if $point == medium-monitor {
		@media (max-height: 747px) { @content; }
	}
	@if $point == short-monitor {
		@media (max-height: 600px) { @content; }
	}
	@else {
		@media (max-width: $point + px) { @content; }
	}
}

/** GENERAL
=========== */

/* Remove iOS tap highlight */
@mixin no-tap-highlight() {
	-ms-touch-action: none;
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	-webkit-touch-callout: none;
}

/* Remove margin and padding */
@mixin reset-metrics() {
	margin:0;
	padding:0;
}

/* Remove list styling */
@mixin reset-list() {
	@include reset-metrics();
	list-style:none;
}

/** TYPOGRAPHY
============== */

@mixin font-dimensions($font-size, $line-height) {
	@include font-size($font-size);
	@include line-height($line-height);
}

@mixin font-size($value) {
	font-size: $value + px;
	font-size: ($value / $rem) + rem;
}

@mixin line-height($value) {
	line-height: $value + px;
	line-height: $value / $rem + rem;
}

@mixin font($family:$default_font, $weight:$default_font_weight) {
	font-family:$family;
	font-weight:$weight;
}

@mixin base-type() {
	@include font-dimensions($default_font_size, $default_line_height);
	@include font($default_font, $default_font_weight);
	color:$default_font_color;
}

@mixin base-type-size() {
	@include font-dimensions($default_font_size, $default_line_height);
}


/** BOX MODEL
============= */

@mixin element-margin($top_multiplier:1, $bottom_multiplier:1) {
	margin-top:$default_line_height * $top_multiplier + px;
	margin-top:rem($default_line_height * $top_multiplier);
	margin-bottom:$default_line_height * $bottom_multiplier + px;
	margin-bottom:rem($default_line_height * $bottom_multiplier);
}

@mixin flex-padding($top:0, $right:0, $bottom:0, $left:0) {
	padding: $top+px $right+px $bottom+px $left+px;
	padding: $top/$rem+rem $right/$rem+rem $bottom/$rem+rem $left/$rem+rem;
}

@mixin flex-height($height) {
	height: $height + px;
	height: $height/$rem + rem;
}

@mixin flex-min-height($height) {
	min-height: $height + px;
	min-height: $height/$rem + rem;
}

@mixin flex-width($width) {
	width: $width + px;
	width: $width/$rem + rem;
}

@mixin flex-min-width($width) {
	min-width: $width + px;
	min-width: $width/$rem + rem;
}

@mixin flex-top($amount) {
	top: $amount + px;
	top: $amount/$rem + rem;
}

@mixin flex-right($amount) {
	right: $amount + px;
	right: $amount/$rem + rem;
}

@mixin flex-bottom($amount) {
	bottom: $amount + px;
	bottom: $amount/$rem + rem;
}

@mixin flex-left($amount) {
	left: $amount + px;
	left: $amount/$rem + rem;
}

@mixin flex-margin($top:0, $right:0, $bottom:0, $left:0) {
	margin: $top+px $right+px $bottom+px $left+px;
	margin: $top/$rem+rem $right/$rem+rem $bottom/$rem+rem $left/$rem+rem;
}

/** Returns %
============= */

@function percent($value, $of) {
	@return (($value / $of) * 100%);
}

/** Returns a rem value
======================= */

@function rem($amount) {
	@return $amount/$rem + rem;
}

/** INLINE BLOCK
================ */

@mixin inline-block() {
	display:inline-block;
	.lt-ie8 & {
		display:inline;
	}
}

@mixin remove-inline-block-gaps() {
	font-size:0;
	word-spacing:0;
	letter-spacing:0;
}

/** First/Last Elements
======================= */
@mixin first-element() {
	&:first-child {
		@content;	
	}
}

@mixin last-element() {
	&:last-child {
		@content;	
	}
}

/** BEFORE/AFTER
================ */

@mixin before() {
	&:before {
		@content;
	}
}

@mixin after() {
	&:after {
		@content;
	}
}

@function getNonRetinaSize($value) {
	@return $value / 2;
}

@mixin border-box() {
	@include box-sizing(border-box);
}

@mixin ellipsis() {
	overflow:hidden;
	text-overflow:ellipsis;
	white-space:nowrap;
}
